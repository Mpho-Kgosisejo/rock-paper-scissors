{"version":3,"sources":["src/playScreen.js","App.js","src/signs/rock.png","src/signs/paper.png","src/signs/scissors.png"],"names":["rockImagePath","require","paperImagePath","scissorsImagePath","PlayScreen","setPlay","images","React","useState","counter","setCounter","useEffect","timer","setTimeout","prev","clearTimeout","View","style","styles","container","backgroundColor","content","Image","image","source","randomNum","Math","floor","random","length","randomImage","TouchableOpacity","onPress","button","Text","buttonText","buttonInverted","buttonInvertedText","text","StyleSheet","create","flex","width","alignItems","justifyContent","marginVertical","flexDirection","fontSize","fontWeight","height","borderWidth","borderRadius","borderColor","color","resizeMode","App","play","Fragment","emojis","StatusBar","marginBottom","marginTop","module","exports"],"mappings":"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","file":"static/js/app.53e5f6ae.chunk.js","sourcesContent":["\nimport React from 'react';\n\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  TouchableOpacity\n} from 'react-native';\n\nconst rockImagePath = require('./signs/rock.png');\nconst paperImagePath = require('./signs/paper.png');\nconst scissorsImagePath = require('./signs/scissors.png');\n\nexport const PlayScreen = ({\n  setPlay\n}) => {\n\n  const timeout = 3;\n  const colors = [ '#1dd1a1', '#ff6b6b', '#54a0ff', '#feca57' ];\n  const images = [rockImagePath, paperImagePath, scissorsImagePath];\n\n  const [counter, setCounter] = React.useState(timeout);\n\n  const randomImage = () => {\n\n    const randomNum = Math.floor( Math.random() * images.length);\n\n    return images[randomNum];\n  };\n\n  React.useEffect(() => {\n\n    if (counter <= 0) {\n      return;\n    }\n\n    let timer = setTimeout(() => {\n\n      setCounter(prev => prev - 1);\n    }, 500);\n\n    return () => {\n\n      clearTimeout(timer);\n    };\n  }, [counter]);\n\n  return (\n    <View style={[\n      styles.container, {\n        backgroundColor: colors[counter]\n      }\n    ]}>\n\n      { (counter <= 0)\n\n        ? (\n            <View style={styles.content}>\n\n              <Image\n                style={styles.image}\n                source={randomImage()}\n              />\n\n              <View>\n\n                <TouchableOpacity\n                  onPress={() => setCounter(timeout)}\n                  style={styles.button}\n                >\n                  <Text style={styles.buttonText}>\n                    Play again!\n                  </Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  onPress={() => setPlay(false)}\n                  style={[\n                    styles.button,\n                    styles.buttonInverted,\n                  ]}\n                >\n                  <Text style={[\n                    styles.buttonText,\n                    styles.buttonInvertedText,\n                  ]}>\n                    I give up\n                  </Text>\n                </TouchableOpacity>\n\n              </View>\n\n            </View>\n          )\n\n        : <Text style={styles.text}>\n            { counter }\n          </Text>\n      }\n\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center',\n    backgroundColor: 'pink',\n    justifyContent: 'center',\n  },\n  content: {\n    flex: 1,\n    marginVertical: 100,\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n  },\n  text: {\n    fontSize: 200,\n    fontWeight: '100'\n  },\n  button: {\n    width: 200,\n    height: 40,\n    borderWidth: 2,\n    borderRadius: 3,\n    marginVertical: 10,\n    alignItems: 'center',\n    borderColor: '#296bbf',\n    justifyContent: 'center',\n    backgroundColor: '#296bbf'\n  },\n  buttonText: {\n    fontSize: 20,\n    color: '#FFF'\n  },\n  buttonInverted: {\n    backgroundColor: 'transparent'\n  },\n  buttonInvertedText: {\n    color: '#296bbf'\n  },\n  image: {\n    width: 300,\n    height: 300,\n    marginVertical: 20,\n    resizeMode: 'contain'\n  }\n});","import {\n  StatusBar\n} from 'expo-status-bar';\n\nimport React from 'react';\n\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity\n} from 'react-native';\n\nimport {\n  PlayScreen\n} from './src/playScreen';\n\nexport default function App() {\n\n  const [play, setPlay] = React.useState(false);\n\n  return (\n    <View style={styles.container}>\n\n      { play\n\n        ? <PlayScreen setPlay={setPlay} />\n\n        : <React.Fragment>\n\n            <Text\n              style={[\n                styles.text\n              ]}\n            >\n              Rock Paper Scissors\n            </Text>\n\n            <Text\n              style={[\n                styles.text,\n                styles.emojis\n              ]}\n            >\n              ‚úäüèæ ‚úãüèæ ‚úåüèæ\n            </Text>\n\n            <TouchableOpacity\n              style={styles.button}\n              onPress={() => setPlay(true)}\n            >\n              <Text\n                style={styles.buttonText}\n              >\n                Play\n              </Text>\n            </TouchableOpacity>\n\n            <StatusBar style=\"auto\" />\n\n          </React.Fragment>\n      }\n\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    marginBottom: 15,\n    fontSize: 30\n  },\n  emojis: {\n    fontSize: 50\n  },\n  button: {\n    height: 40,\n    width: 200,\n    marginTop: 20,\n    borderRadius: 3,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#296bbf'\n  },\n  buttonText: {\n    fontSize: 20,\n    color: '#FFF'\n  }\n});\n","module.exports = __webpack_public_path__ + \"static/media/rock.79436ec1.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.599c25df.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.f27b7752.png\";"],"sourceRoot":""}